@model ClothBazar.Web.ViewModel.ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";
}

<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="searchTxt" name="Search" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Actions</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="searchBtn">Search</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="newBtn">New</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="ResetBtn">Reset</button>
                        </div>
                    </div>

                </div>

            </div>

        </div>

    </form>
</div>
<div>
    <table id="ProductsTable" class="table table-striped">
        <thead>
            <tr>
                <th class="font-weight-bold">Product Name</th>
                <th class="font-weight-bold">Category</th>
                <th class="font-weight-bold">Price</th>
                <th class="font-weight-bold wrap-td">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Product in Model.Products)
            {
                <tr>
                    <td>@Product.Name</td>
                    <td>
                        @if (Product.Category != null)
                        {
                            <text>@Product.Category.Name</text>
                        }
                        else
                        {
                            <text>_</text>
                        }
                    </td>

                    <td>@Product.Price</td>
                    <td>
                        <button class="EditBtn" data-id="@Product.ID">Edit</button>
                        <button class="DeleteBtn" data-id="@Product.ID">Delete</button>
                        <button class="AddToCart" data-id="@Product.ID">AddToCart</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @if (Model.Pager != null)
        {
            if (Model.Pager.CurrentPage > 1)
            {
                <button class="PageButtons" data-PageNo="1">First</button>
                <button class="PageButtons" data-PageNo="@(Model.Pager.CurrentPage -1)">Previous</button>
            }
            for (var Page = Model.Pager.StartPage; Page <= Model.Pager.EndPage; Page++)
            {
                var ActiveClass = Model.Pager.CurrentPage == Page ? "Active bg-info" : string.Empty;
                <button class="@ActiveClass PageButtons" data-PageNo="@Page">@Page</button>
            }
            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="PageButtons" data-PageNo="@(Model.Pager.CurrentPage +1)">Next</button>
                <button class="PageButtons" data-PageNo="@Model.Pager.EndPage">Last</button>
            }
        }
    </div>
</div>
<script>

    $(".PageButtons").click(function () {
        $.ajax({
            type: "GET",
            url: '@Url.Action("ProductTable","Product")', 
            data : {
                PageNo: $(this).attr('data-PageNo')
        }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });
    $("#searchBtn").click(function () {
        var SearchValue = $("#searchTxt").val();

        $.ajax({
            url: '@Url.Action("ProductTable","Product")' ,
            data: {
                search: SearchValue
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#ResetBtn").click(function () {
        var SearchValue = "" ;

        $.ajax({
            url: '@Url.Action("ProductTable","Product")' /*'/Product/ProductTable'*/,
            data: {
                search: SearchValue
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });
    $("#newBtn").click(function () {
        $.ajax({
            type: "GET",
            url: '@Url.Action("Create","Product")' /*'/Product/Create'*/
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction("actionContainer");
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });
    $(".EditBtn").click(function () {
        $.ajax(
            {
                type:"GET",
                url: /*'/Product/Edit'*/ '@Url.Action("Edit","Product")',
                data: {
                    ID: $(this).attr('data-id')
                },
                success: function (response) {
                    $("#actionContainer").html(response);
                    focusAction("actionContainer");
                },
                fail: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Fail")
                }

            });
    });
    $(".DeleteBtn").click(function () {
        swal({
  title: "Are you sure?",
  text: "Do u Want to delete This Product ? ",
  icon: "warning",
  buttons: true,
  dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax(
                    {
                        type: 'POST',
                        url: '@Url.Action("Delete","Product")' /*'/Product/Delete'*/,
                        data: {
                            ID: $(this).attr('data-id')
                        }
                    }).done(function (response) {
                        $("#tableContainer").html(response);
                        swal("Product have been Deleted", {
                            icon: "success",
                        });
                    }).fail(function (XMLHttpRequest, testStatus, errorthrown) {
                        alert("Fail");
                    });
            }
        })
    });
    var Products = [];
    $(".AddToCart").click(function () {
        var ProductID = $(this).attr('data-id');
        Products.push(ProductID);
        $.cookie('cartProduct', Products.join('-'), { path : "/" });
    })
</script>
